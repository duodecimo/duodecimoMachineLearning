#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
MACHINE LEARNING FOR COMPUTER ENGENEERING
\end_layout

\begin_layout Author
Laurentino Duod√©cimo Rosado Fernandes
\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
Machine learning, also called automatic learning, according to Arthur Samuel
 in 1959, 
\begin_inset Quotes eld
\end_inset

gives computers the ability to learn without being explicitly programmed
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset


\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Andrew NG seems to rather saying: without being 
\emph on
apparently
\emph default
 explicitly programmed
\begin_inset CommandInset citation
LatexCommand cite
key "key-2,key-3"

\end_inset

.
\end_layout

\begin_layout Standard
Take a little child, for example.
 One points objects to them, and says things like: - 
\begin_inset Quotes eld
\end_inset

Look, a dog!
\begin_inset Quotes erd
\end_inset

, and then, - 
\begin_inset Quotes eld
\end_inset

There, a car!
\begin_inset Quotes erd
\end_inset

, and so on.
 A little while further, the child begins to mention the objects when they
 see them.
 The child learned the name of the objects and is able to classify the objects
 to a certain extent.
\end_layout

\begin_layout Standard
Some aspects of the learning process must be observed:
\end_layout

\begin_layout Itemize
One just shows the object and labels it.
\end_layout

\begin_layout Itemize
No particular characteristics of the object must be taught (a car has wheels,
 a dog has eyes and mouth, ...).
\end_layout

\begin_layout Itemize
The child is able to recognize up to some extent different objects of the
 same class (several branches of cars, with different color, size and shape,
 several kinds of dogs, races are pretty different).
\end_layout

\begin_layout Standard
Computer codes are sets of instructions.
 The instructions are very strict, they are operations applied on numerical
 data, like, - "add those and put it there", - "compare those and decide
 what to do based on the result", - "repeat this operations until ...", and
 so on.
 It is an easy task to teach to a child how to recognize a car, one just
 points and label.
 But maybe it is not so easy to teach a computer to do the same thing expressing
 specific computer language instructions.
 This will be discussed in a more profound way further in our classes.
 One can try to express properties of a car components that can leads to
 its correct recognition, like, it must have wheels, a shape of some form
 ...
 just thinking about it will show how hard this task is.
 Maybe we can say we know to recognize a car, but, we don't know how we
 do it.
 Some outbreak brain functioning theories states that our brains have specialize
d areas to process stuff, and several of this areas are out of the concient
 parts of our brains.
 So, we can do it (by receiving in our sentient part of the brain results
 of processing done in our brain inconcient), but we don't know how we do
 it.
\end_layout

\begin_layout Standard
Computer scientists have try to take several approaches to perform object
 recognition, in the most general field of artificial intelligence.
 There has been some success in characteristics segmentation, but with poor
 generalization effects.
 There is where automatic learning has recently deserving special efforts,
 and has given some promising results.
 We will see that a recognition algorithm does it works by automatically
 selecting some characteristics, but, as they evolve, we have no idea what
 characteristics it is selecting.
 Usually, a huge amount, and also, a huge blend of them, not necessarily
 something as evident as wheels, corners and wiind shields.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "key-1"

\end_inset

Machine Learning, https://en.wikipedia.org/wiki/Machine_learning, visited
 in April 15, 2017
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "key-2"

\end_inset

Coursera, https://pt.coursera.org/learn/machine-learning, visited in April
 14, 2017
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "key-3"

\end_inset

Andrew NG, http://www.andrewng.org/, visited in April 14, 2017
\end_layout

\end_body
\end_document
