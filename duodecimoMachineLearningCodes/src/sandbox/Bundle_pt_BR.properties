# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.

CREATING\ AND\ OPERATING\ REALMATRIX.=Criando e operando matrizes.
\ (\ DIMENSION\ \=\ {0})=\ ( dimens\u00e3o = {0})
\ %8.2F=\ %8.2f
\ ({0}\ X\ {1})=\ ({0} X {1})
CODE\:\ {0}=C\u00f3digo: {0}
TASK\:\ {0}=tarefa: {0}
R\ \=\ R.ADD(B)=r = r.add(b)
FINALLY\ LET'S\ DO\ \ W\ *\ X\ +\ B=Finalmente vamos fazer  W * x + b
VECTOR\ R\:=Vector r:
REALVECTOR\ R\ \=\ W.OPERATE(X)=RealVector R = W.operate(x)
LET'S\ DO\ W\ *\ X=vamos  fazer W * x
VECTOR\ B\:=Vector b:
REALVECTOR\ B\ \=\ MATRIXUTILS.CREATEREALVECTOR(NEW\ DOUBLE[]{1.1,\ 3.2,\ -1.2})=RealVector b = MatrixUtils.createRealVector(new double[]{1.1, 3.2, -1.2})
LET'S\ CREATE\ A\ VECTOR\ B=vamos criar um vetor b
VECTOR\ X\:=Vector x:
REALVECTOR\ X\ \=\ MATRIXUTILS.CREATEREALVECTOR(NEW\ DOUBLE[]{56,\ 231,\ 24,\ 2})=RealVector x = MatrixUtils.createRealVector(new double[]{56, 231, 24, 2})
LET'S\ CREATE\ A\ VECTOR\ X=vamos criar um vetor x
MATRIX\ W\:=Matriz W:
\ \ \ \ \ \ \ \ \ \ \ \ {1.5,1.3,2.1,0},\ {0,0.25,0.2,-0.3}})=\ \ \ \ \ \ \ \ \ \ \ \ {1.5,1.3,2.1,0}, {0,0.25,0.2,-0.3}})
REALMATRIX\ W\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{0.2,\ -0.5,\ 0.1,\ 2.0},\\NEWLINE=RealMatrix W = MatrixUtils.createRealMatrix(new double[][]{{0.2, -0.5, 0.1, 2.0},\n  
LET'S\ CREATE\ A\ MATRIX\ W=vamos criar uma matriz W
\ AND\ THEN\ ADDING\ TO\ ANOTHER\ VECTOR,\ GETTING\ A\ VECTOR=e ent\u00e3o vamos adicionar a outro vetor, obtendo no final um vetor.
WE\ ARE\ MULTIPLYING\ A\ MATRIX\ TO\ A\ VECTOR\ (GIVES\ A\ VECTOR)\\NEWLINE=Estamos multiplicando uma matriz por um vetor (resulta em um vetor)\n
WANT\ PERFORM\ LINEAR\ CLASSIFICATION.\\NEWLINE\ F(XI,W,B)\=WXI+B\\NEWLINE=quisermos realizar Classifica\u00e7\u00e3o Linear. \n  f(xi,W,b)=Wxi+b\n
NOW\ WE\ WILL\ TRY\ AN\ OPERATION\ THAT\ WILL\ HAPPEN\ WHEN\ WE\ =Agora n\u00f3s vamos tentar uma opera\u00e7\u00e3o que vai acontecer quando n\u00f3s 
MATRIX\ A\ *\ A'\:=Matriz A * A':
NOW\ WE\ CAN\ MULTIPLY\ BOTH=Agora podemos multiplicar ambas
MATRIX\ A'\:=Matriz A':
LETS\ TRANSPOSE\ IT=vamos transpor a matriz
\\NEWLINE=\n
ONLY\ BY\ A\ (2,\ M)\ MATRIX!=apenas por uma matriz (2, m)!
FOR\ EXAMPLE,\ WE\ CAN\ MULTIPLY\ A\ (N,\ 2)\ MATRIX\ =Por exemplo, podemos multiplicar uma matriz (n, 2)  
A\ X\ A\ GIVES\ (2,3)\ *\ (2,3),\ DOES\ NOT\ MATCH!=A x A d\u00e1 (2,3) * (2,3), n\u00e3o bate!
MUST\ MATCH\ RIGHT\ MATRIX\ NUMBER\ OF\ LINES!=precisa ser igual ao numero de linhas da matriz da direita!
THE\ RULE\ IS\:\ LEFT\ MATRIX\ NUMBER\ OF\ COLUMNS\ =A regra \u00e9: o numero de colunas da matriz da esquerda 
WE\ CAN'T\ MULTIPLY\ A\ *A,\ WE\ GET\ A\ DIMENSION\ EXCEPTION\:\ =N\u00e3o podemos multiplicar A *A, ocorre uma exce\u00e7\u00e3o de dimens\u00e3o: 
MATRIX\ A\ *\ A\:=Matriz A * A:
REALMATRIX\ A\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1,2,3},\ {4,5,6}})=RealMatrix A = MatrixUtils.createRealMatrix(new double[][]{{1,2,3}, {4,5,6}})
LET'S\ TRY\ TO\ MULTIPLY\ A\ TO\ ITSELF=vamos tentar multiplicar A por ela mesma
MATRIX\ A\:=Matriz A:
LETS\ BUILD\ A\ MATRIX=vamos construir uma matriz
MATRICES\ MULTIPLICATION.=Multiplica\u00e7\u00e3o de matrizes.
SOME\ MATRICES\ OPERATIONS.\\NEWLINE=Algumas opera\u00e7\u00f5es de matrizes.\n  
L2C5\ \=\ MATRIXGROWDIMENSION.ATTACHZEROSCOLUMN(L2C4)=L2C5 = MatrixGrowDimension.attachZerosColumn(L2C4)
LETS\ ATTACH\ AN\ EXTRA\ COLUMN\ OF\ ZEROS\ INSTEAD=vamos adicionar uma coluna extra com zeros ao inv\u00e9s
L3C4\ \=\ MATRIXGROWDIMENSION.ATTACHZEROSROW(L2C4)=L3C4 = MatrixGrowDimension.attachZerosRow(L2C4)
LETS\ ATTACH\ AN\ EXTRA\ ROW\ OF\ ZEROS\ INSTEAD=vamos adicionar uma linha extra com zeros ao inv\u00e9s
MATRIX\ L2C5\:=Matrix L2C5:
REALMATRIX\ L2C5\ \=\ MATRIXGROWDIMENSION.ATTACHONESCOLUMN(L2C4)=RealMatrix L2C5 = MatrixGrowDimension.attachOnesColumn(L2C4)
LETS\ ATTACH\ AN\ EXTRA\ COLUMN\ OF\ ONES\ INSTEAD=vamos adicionar uma coluna extra com uns ao inv\u00e9s
MATRIX\ L3C4\:=Matrix L3C4:
REALMATRIX\ L3C4\ \=\ MATRIXGROWDIMENSION.ATTACHONESROW(L2C4)=RealMatrix L3C4 = MatrixGrowDimension.attachOnesRow(L2C4)
LETS\ ATTACH\ AN\ EXTRA\ ROW\ OF\ ONES\ TO\ IT=vamos adicionar uma linha extra com uns a ela
MATRIX\ L2C4\:=Matrix L2C4:
REALMATRIX\ L2C4\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1,2,3,4},{5,6,7,8}})=RealMatrix L2C4 = MatrixUtils.createRealMatrix(new double[][]{{1,2,3,4},{5,6,7,8}})
LETS\ BUILD\ A\ MATRIX\ 2\ X\ 4=vamos construir uma matriz 2 x 4
REALMATRIX\ L2C2\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1,2},{3,4}})=RealMatrix L2C2 = MatrixUtils.createRealMatrix(new double[][]{{1,2},{3,4}})
LETS\ BUILD\ A\ MATRIX\ 2\ X\ 2=vamos construir uma matriz 2 x 2
MATRIX\ L1C2\:=Matrix L1C2:
REALMATRIX\ L1C2\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1,\ 2}})=RealMatrix L1C2 = MatrixUtils.createRealMatrix(new double[][]{{1, 2}})
LETS\ BUILD\ A\ MATRIX\ 1\ X\ 2=vamos construir uma matriz 1 x 2
MATRIX\ L2C1\:=Matrix L2C1:
REALMATRIX\ L2C1\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1},{2}});=RealMatrix L2C1 = MatrixUtils.createRealMatrix(new double[][]{{1},{2}});
LETS\ BUILD\ A\ MATRIX\ 2\ X\ 1=vamos construir uma matriz 2 x 1
MATRIX\ L1C1\:=Matrix L1C1:
REALMATRIX\ L1C1\ \=\ MATRIXUTILS.CREATEREALMATRIX(NEW\ DOUBLE[][]{{1}});=RealMatrix L1C1 = MatrixUtils.createRealMatrix(new double[][]{{1}});
LETS\ BUILD\ A\ MATRIX\ 1\ X\ 1=vamos construir uma matriz 1 x 1
CREATE\ SOME\ MATRICES,\ WITH\ SEVERAL\ DIMENSIONALITIES.=Criar algumas matrizes com v\u00e1rias dimensionalidades.
